# Posts a comment listing all the variables that changed in a PR
name: v8 Diff for design tokens
on:
  pull_request:
    branches-ignore:
      - 'changeset-release/**'
  workflow_dispatch:

jobs:
  changes:
    uses: ./.github/workflows/hasChanged.yml

  diff:
    needs: changes
    if: needs.changes.outputs.outputAffected == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (pr)
        run: npm ci --no-audit --no-fund --include=dev --ignore-scripts

      - name: Build tokens (pr)
        run: npm run build:v8

      - name: Install dependencies (base)
        run: pushd base; npm i --no-audit --no-fund --ignore-scripts; popd

      - name: Build tokens (base)
        run: pushd base; npm run build:v8; popd

      - name: Install dependecies for diffing
        run: npm install shelljs

      - name: Diff v8 tokens
        id: diff-files
        uses: actions/github-script@v7
        with:
          script: |
            const shell = require('shelljs')
            const globber = await glob.create('dist/css/**/*.css')
            const files = await globber.glob()
            const diffFilePath = 'diffs/diff_output.txt'
            shell.mkdir('-p', 'diffs')
            shell.touch(diffFilePath)

            files.forEach(file => {
              const diff = shell.exec(`diff -u ${file.replace('dist/css', 'base/dist/css')} ${file} >> ${diffFilePath}`)
              if (diff.stderr) {
                console.error(diff.stderr)
                core.setFailed(diff.stderr)
              }
            })

            if (shell.cat(diffFilePath).stdout === '') {
              console.log('No differences in design tokens.')
            } else {
              console.log('Differences detected in design tokens.')
            }

      - name: Write summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const diffFilePath = 'diffs/diff_output.txt'
            const diffs = fs.readFileSync(diffFilePath, 'utf8')
            
            core.summary.clear()
            
            core.summary.addHeading('V8 Design Token Diff', '1')
            
            if (!diffs) {
              core.summary.addRaw('No design tokens changed', true)
            } else {
              core.summary.addRaw('```diff\n' + diffs + '\n```', true)
            }

            // write summary
            core.summary.write({overwrite: true})

      - name: Comment on pr
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const diffFilePath = 'diffs/diff_output.txt'
            const diffs = fs.readFileSync(diffFilePath, 'utf8')

            let body = '## Design Token Diff\n\n'
            if (!diffs) {
              body += 'No design tokens changed'
            } else {
              body += '```diff\n' + diffs + '\n```'
            }

            const {data: comments} = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const existingComment = comments.find(comment => comment.body.includes('## Design Token Diff'));
            if (existingComment) {
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              })
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              })
            }
