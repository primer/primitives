name: Release
on:
  push:
    branches:
      - 'main'
      - 'next-major'
jobs:
  release_candidate:
    name: Release for latest version
    if: ${{ github.repository == 'primer/primitives' && github.ref_name == 'main' }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund && pushd docs; npm ci --no-audit --no-fund; popd

      - name: Build tokens
        run: npm run build

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PRIMER_APP_ID_SHARED }}
          private-key: ${{ secrets.PRIMER_APP_PRIVATE_KEY_SHARED }}

      - name: Create release pull request or publish to npm
        id: changesets
        uses: changesets/action@v1.4.7
        continue-on-error: true
        with:
          title: Release Tracking
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: npm run release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

      - name: Output release version to summary
        if: ${{ steps.changesets.outputs.published}} = 'true'
        env:
          VERSION: ${{ steps.changesets.outputs.publishedPackages[0].version }}
          PACKAGE_NAME: ${{ steps.changesets.outputs.publishedPackages[0].name }}
        run: |
          echo "### Latest release" >> $GITHUB_STEP_SUMMARY
          echo "[v$VERSION](https://unpkg.com/$PACKAGE_NAME@$VERSION/)" >> $GITHUB_STEP_SUMMARY

  release_candidate_next_major:
    name: Release for next version
    if: ${{ github.repository == 'primer/primitives' && github.ref_name == 'next-major' }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund && pushd docs; npm ci --no-audit --no-fund; popd

      - name: Build tokens
        run: npm run build

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PRIMER_APP_ID_SHARED }}
          private-key: ${{ secrets.PRIMER_APP_PRIVATE_KEY_SHARED }}

      - name: Create release pull request or publish to npm
        id: changesets
        uses: changesets/action@v1.4.7
        continue-on-error: true
        with:
          title: Release Tracking (Next Major)
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: npx changeset publish --tag next
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

      - name: Output release version to summary
        if: ${{ steps.changesets.outputs.published}} = 'true'
        env:
          VERSION: ${{ steps.changesets.outputs.publishedPackages[0].version }}
          PACKAGE_NAME: ${{ steps.changesets.outputs.publishedPackages[0].name }}
        run: |
          echo "### Latest release" >> $GITHUB_STEP_SUMMARY
          echo "[v$VERSION](https://unpkg.com/$PACKAGE_NAME@$VERSION/)" >> $GITHUB_STEP_SUMMARY
